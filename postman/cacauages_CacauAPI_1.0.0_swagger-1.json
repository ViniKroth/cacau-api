{
  "tags" : [ {
    "name" : "challenge",
    "description" : "Everything about challenges"
  }, {
    "name" : "submission",
    "description" : "Everything about submissions"
  }, {
    "name" : "user",
    "description" : "Operations about user"
  } ],
  "paths" : {
    "/challenges" : {
      "post" : {
        "tags" : [ "challenge" ],
        "summary" : "Add a new challenge",
        "operationId" : "Test",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Challenge"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "New challenge added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Challenge"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "get" : {
        "tags" : [ "challenge" ],
        "summary" : "Retrieve all challenges",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Challenge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/challenges/{challengeId}" : {
      "get" : {
        "tags" : [ "challenge" ],
        "summary" : "Find challenge by ID",
        "description" : "Returns a single challenge",
        "operationId" : "getChallengeById",
        "parameters" : [ {
          "name" : "challengeId",
          "in" : "path",
          "description" : "ID of challenge to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Challenge"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Challenge not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "challenge" ],
        "summary" : "Disable a challenge",
        "parameters" : [ {
          "name" : "challengeId",
          "in" : "path",
          "description" : "ID of challenge to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Challenge not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/submission" : {
      "post" : {
        "tags" : [ "submission" ],
        "summary" : "Add a new submission",
        "operationId" : "addSubmission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "New submission added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Submission"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "get" : {
        "tags" : [ "submission" ],
        "summary" : "Retrieve all submissions",
        "operationId" : "getSubmisions",
        "responses" : {
          "200" : {
            "description" : "Sucessful operation",
            "content" : {
              "applicatioon/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Submission"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/submissions/{submissionId}" : {
      "get" : {
        "tags" : [ "submission" ],
        "summary" : "Find submission by ID",
        "description" : "Returns a single submission",
        "operationId" : "getSubmissionById",
        "parameters" : [ {
          "name" : "submissionId",
          "in" : "path",
          "description" : "ID of submission to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Submission"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Submission not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "submission" ],
        "summary" : "Update a submission",
        "parameters" : [ {
          "name" : "submissionId",
          "in" : "path",
          "description" : "ID of submission to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Submission not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "submission" ],
        "summary" : "Disable a submission",
        "parameters" : [ {
          "name" : "submissionId",
          "in" : "path",
          "description" : "ID of submission to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Submission not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/submissions/{submissionId}/medias" : {
      "post" : {
        "tags" : [ "submission" ],
        "summary" : "Add a new media to a submission",
        "operationId" : "addMediaToSubmission",
        "parameters" : [ {
          "name" : "submissionId",
          "in" : "path",
          "description" : "ID of submission to add a media to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Media"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "New media posted to submission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Media"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Created user object",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "succesful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Retrieve all users",
        "description" : "Retrieve all users",
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/users/{userId}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Find user by ID",
        "description" : "Returns a single user",
        "operationId" : "getUserById",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to return",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "user" ],
        "summary" : "Update a user",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Replace a user",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to replace",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Disable a user",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of user to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/user/login" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "operationId" : "loginUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "operationId" : "logoutUser",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "admin" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          }
        }
      },
      "Challenge" : {
        "type" : "object",
        "required" : [ "description", "start_time", "end_time" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          },
          "start_time" : {
            "type" : "string"
          },
          "end_time" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string",
            "description" : "challenge status related to user",
            "enum" : [ "upcoming", "open", "closed", "running", "won" ]
          }
        }
      },
      "Submission" : {
        "type" : "object",
        "required" : [ "description", "challenge_id", "user_id" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "challenge_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "user_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "medias" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          }
        }
      },
      "Media" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "string"
          }
        }
      }
    }
  }
}